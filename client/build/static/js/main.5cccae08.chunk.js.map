{"version":3,"sources":["components/partials/Card.js","components/Home.js","api/api-requests.js","components/partials/instruments/UpdateInstrumentForm.js","components/partials/instruments/NewInstrumentForm.js","components/partials/students/UpdateStudentForm.js","components/partials/students/NewStudentForm.js","components/partials/music/UpdateMusicForm.js","components/partials/music/NewMusicForm.js","components/partials/CrudWrapper.js","components/partials/Button.js","components/partials/Grid.js","components/Inventory.js","components/partials/Navbar.js","App.js","index.js"],"names":["Card","icon","description","className","Home","href","target","rel","headers","type","cellId","a","options","method","body","JSON","stringify","_id","response","fetch","console","log","e","patchItem","postItem","UpdateInstrumentForm","id","closeView","useState","instrument","setInstrument","brand","useRef","model","serial","caseContents","useEffect","json","fetchInstrument","onUpdateHandler","preventDefault","current","value","serialNumber","htmlFor","ref","name","defaultValue","required","onClick","NewInstrumentForm","onAddHandler","UpdateStudentForm","student","setStudent","firstName","lastName","grade","classes","fetchStudent","NewStudentForm","UpdateMusicForm","music","setMusic","title","composer","arranger","genre","year","fetchMusic","NewMusicForm","CrudWrapper","crudType","newInstrument","instrumentCrud","setInstrumentCrud","studentCrud","setStudentCrud","musicCrud","setMusicCrud","closeViewHandler","Button","label","handleClick","Grid","openView","gridType","useReducer","x","forceUpdate","handleUpdate","cell","handleDelete","deleteItem","header","columns","formatter","_","bind","server","url","then","data","gridArr","item","push","search","enabled","td","th","table","pagination","container","limit","Inventory","setCrudType","setGridType","instrumentId","setInstrumentId","setNewInstrument","contextSwitchHandler","context","to","Header","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5cccae08.chunk.js","sourcesContent":["import { FaGlasses } from 'react-icons/fa';\r\nimport { FaSearch } from 'react-icons/fa';\r\nimport { FaEdit } from 'react-icons/fa';\r\n\r\nimport './Card.css';\r\n\r\nconst Card = ({ icon, description }) => {\r\n  return (\r\n    <div className=\"card\">\r\n      {icon === 'glasses' && <FaGlasses className=\"card__icon\" />}\r\n      {icon === 'search' && <FaSearch className=\"card__icon\" />}\r\n      {icon === 'edit' && <FaEdit className=\"card__icon card__icon--edit\" />}\r\n      <div className=\"card__description\">\r\n        <p>{description}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import Card from './partials/Card';\r\n\r\nimport './Home.css';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <>\r\n      <header className=\"hero\">\r\n        <div className=\"hero__text\">\r\n          <h1 className=\"hero__title\">Ledgerline</h1>\r\n          <p className=\"hero__tag\">An app for music educators</p>\r\n        </div>\r\n      </header>\r\n      <section className=\"features\">\r\n        <h1 className=\"features__title\">Features</h1>\r\n        <div className=\"features__container\">\r\n          <Card\r\n            className=\"card--1\"\r\n            icon=\"glasses\"\r\n            description=\"View complete lists of your students, music, and instrument\r\n          inventories.\"\r\n          />\r\n          <Card\r\n            className=\"card--2\"\r\n            icon=\"search\"\r\n            description=\"Find specific items quickly with a blazing-fast, client-side search.\"\r\n          />\r\n          <Card\r\n            className=\"card--3\"\r\n            icon=\"edit\"\r\n            description=\"Edit entries, keeping your inventories up to date and accountable to administrators.\"\r\n          />\r\n        </div>\r\n      </section>\r\n      <footer className=\"footer\">\r\n        <p className=\"footer__text\">\r\n          &copy; Copyright 2021. Created by John Williams using the{' '}\r\n          <a\r\n            href=\"https://www.mongodb.com/mern-stack\"\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n          >\r\n            MERN\r\n          </a>{' '}\r\n          Stack.\r\n        </p>\r\n      </footer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","const headers = {\r\n  'Content-Type': 'application/json',\r\n};\r\n\r\nexport async function deleteItem(type, cellId) {\r\n  const options = {\r\n    method: 'DELETE',\r\n    headers,\r\n    body: JSON.stringify({\r\n      _id: cellId,\r\n    }),\r\n  };\r\n\r\n  try {\r\n    const response = fetch(`api/${type}`, options);\r\n    console.log(response);\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nexport async function patchItem(type, body) {\r\n  const options = {\r\n    method: 'PATCH',\r\n    headers,\r\n    body,\r\n  };\r\n\r\n  try {\r\n    const response = await fetch(`/api/${type}`, options);\r\n    console.log(response);\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nexport async function postItem(type, body) {\r\n  const options = {\r\n    method: 'POST',\r\n    headers,\r\n    body,\r\n  };\r\n\r\n  try {\r\n    const response = await fetch(`/api/${type}`, options);\r\n    console.log(response);\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n","import { useRef, useState, useEffect } from 'react';\r\n\r\nimport { patchItem } from '../../../api/api-requests';\r\n\r\nconst UpdateInstrumentForm = ({ id, closeView }) => {\r\n  const [instrument, setInstrument] = useState(null);\r\n\r\n  const brand = useRef(null);\r\n  const model = useRef(null);\r\n  const type = useRef(null);\r\n  const serial = useRef(null);\r\n  const caseContents = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const fetchInstrument = async () => {\r\n      const response = await fetch(`/api/instrument/${id}`);\r\n      const body = await response.json();\r\n      setInstrument(body);\r\n    };\r\n    fetchInstrument();\r\n  }, [id]);\r\n\r\n  const onUpdateHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!type.current.value) {\r\n      closeView();\r\n      return;\r\n    }\r\n\r\n    const body = JSON.stringify({\r\n      brand: brand.current.value,\r\n      model: model.current.value,\r\n      type: type.current.value,\r\n      serialNumber: serial.current.value,\r\n      caseContents: caseContents.current.value,\r\n      _id: instrument._id,\r\n    });\r\n\r\n    patchItem('instrument', body);\r\n    closeView();\r\n  };\r\n\r\n  const onCancelHandler = (e) => {\r\n    e.preventDefault();\r\n    closeView();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {instrument && (\r\n        <form>\r\n          <div>\r\n            <label htmlFor=\"brand\">Brand:</label>\r\n            <input\r\n              ref={brand}\r\n              type=\"text\"\r\n              name=\"brand\"\r\n              id=\"brand\"\r\n              defaultValue={instrument.brand}\r\n            ></input>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"model\">Model:</label>\r\n            <input\r\n              ref={model}\r\n              type=\"text\"\r\n              name=\"model\"\r\n              id=\"model\"\r\n              defaultValue={instrument.model}\r\n            ></input>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"type\">Instrument Type:</label>\r\n            <input\r\n              ref={type}\r\n              type=\"text\"\r\n              name=\"type\"\r\n              id=\"type\"\r\n              defaultValue={instrument.type}\r\n              required\r\n            ></input>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"serial\">Serial:</label>\r\n            <input\r\n              ref={serial}\r\n              type=\"text\"\r\n              name=\"serial\"\r\n              id=\"serial\"\r\n              defaultValue={instrument.serialNumber}\r\n            ></input>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"contents\">Case Contents:</label>\r\n            <input\r\n              ref={caseContents}\r\n              name=\"contents\"\r\n              id=\"contents\"\r\n              defaultValue={instrument.caseContents}\r\n            ></input>\r\n          </div>\r\n          <div className=\"form__buttons\">\r\n            <button className=\"form__buttons--cancel\" onClick={onUpdateHandler}>\r\n              Update\r\n            </button>\r\n            <button className=\"form__buttons--do\" onClick={onCancelHandler}>\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </form>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UpdateInstrumentForm;\r\n","import { useRef } from 'react';\r\n\r\nimport { postItem } from '../../../api/api-requests';\r\n\r\nconst NewInstrumentForm = ({ closeView }) => {\r\n  const brand = useRef(null);\r\n  const model = useRef(null);\r\n  const type = useRef(null);\r\n  const serial = useRef(null);\r\n  const caseContents = useRef(null);\r\n\r\n  const onAddHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!type.current.value) {\r\n      closeView();\r\n      return;\r\n    }\r\n\r\n    const body = JSON.stringify({\r\n      brand: brand.current.value,\r\n      model: model.current.value,\r\n      type: type.current.value,\r\n      serialNumber: serial.current.value,\r\n      caseContents: caseContents.current.value,\r\n    });\r\n\r\n    postItem('instrument', body);\r\n    closeView();\r\n  };\r\n\r\n  const onCancelHandler = (e) => {\r\n    e.preventDefault();\r\n    closeView();\r\n  };\r\n\r\n  return (\r\n    <form>\r\n      <div>\r\n        <label htmlFor=\"brand\">Brand</label>\r\n        <input ref={brand} type=\"text\" name=\"brand\" id=\"brand\"></input>\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"model\">Model</label>\r\n        <input ref={model} type=\"text\" name=\"model\" id=\"model\"></input>\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"type\">Instrument Type</label>\r\n        <input ref={type} type=\"text\" name=\"type\" id=\"type\" required></input>\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"serial\">Serial</label>\r\n        <input ref={serial} type=\"text\" name=\"serial\" id=\"serial\"></input>\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"contents\">Case Contents</label>\r\n        <input ref={caseContents} name=\"contents\" id=\"contents\"></input>\r\n      </div>\r\n      <div className=\"form__buttons\">\r\n        <button className=\"form__buttons--do\" onClick={onAddHandler}>\r\n          Add\r\n        </button>\r\n        <button className=\"form__buttons--cancel\" onClick={onCancelHandler}>\r\n          Cancel\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NewInstrumentForm;\r\n","import { useRef, useState, useEffect } from 'react';\r\n\r\nimport { patchItem } from '../../../api/api-requests';\r\n\r\nconst UpdateStudentForm = ({ id, closeView }) => {\r\n  const [student, setStudent] = useState(null);\r\n\r\n  const firstName = useRef(null);\r\n  const lastName = useRef(null);\r\n  const grade = useRef(null);\r\n  const instrument = useRef(null);\r\n  const classes = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const fetchStudent = async () => {\r\n      const response = await fetch(`/api/student/${id}`);\r\n      const body = await response.json();\r\n      setStudent(body);\r\n    };\r\n    fetchStudent();\r\n  }, [id]);\r\n\r\n  const onUpdateHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!lastName.current.value) {\r\n      closeView();\r\n      return;\r\n    }\r\n\r\n    const body = JSON.stringify({\r\n      firstName: firstName.current.value,\r\n      lastName: lastName.current.value,\r\n      grade: grade.current.value,\r\n      instrument: instrument.current.value,\r\n      classes: classes.current.value,\r\n      _id: student._id,\r\n    });\r\n\r\n    patchItem('student', body);\r\n    closeView();\r\n  };\r\n\r\n  const onCancelHandler = (e) => {\r\n    e.preventDefault();\r\n    closeView();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {student && (\r\n        <form>\r\n          <div>\r\n            <label htmlFor=\"firstName\">First</label>\r\n            <input\r\n              ref={firstName}\r\n              type=\"text\"\r\n              name=\"firstName\"\r\n              id=\"firstName\"\r\n              defaultValue={student.firstName}\r\n            ></input>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"lastName\">Last</label>\r\n            <input\r\n              ref={lastName}\r\n              type=\"text\"\r\n              name=\"lastName\"\r\n              id=\"lastName\"\r\n              defaultValue={student.lastName}\r\n            ></input>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"grade\">Grade</label>\r\n            <input\r\n              ref={grade}\r\n              type=\"text\"\r\n              name=\"grade\"\r\n              id=\"grade\"\r\n              defaultValue={student.grade}\r\n            ></input>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"instrument\">Instrument</label>\r\n            <input\r\n              ref={instrument}\r\n              type=\"text\"\r\n              name=\"instrument\"\r\n              id=\"instrument\"\r\n              defaultValue={student.instrument}\r\n            ></input>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"contents\">Classes</label>\r\n            <input\r\n              ref={classes}\r\n              name=\"contents\"\r\n              id=\"contents\"\r\n              defaultValue={student.classes}\r\n            ></input>\r\n          </div>\r\n          <div className=\"form__buttons\">\r\n            <button className=\"form__buttons--do\" onClick={onUpdateHandler}>\r\n              Update\r\n            </button>\r\n            <button className=\"form__buttons--cancel\" onClick={onCancelHandler}>\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </form>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UpdateStudentForm;\r\n","import { useRef } from 'react';\r\n\r\nimport { postItem } from '../../../api/api-requests';\r\n\r\nconst NewStudentForm = ({ closeView }) => {\r\n  const firstName = useRef(null);\r\n  const lastName = useRef(null);\r\n  const grade = useRef(null);\r\n  const instrument = useRef(null);\r\n  const classes = useRef(null);\r\n\r\n  const onAddHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!grade.current.value) {\r\n      closeView();\r\n      return;\r\n    }\r\n\r\n    const body = JSON.stringify({\r\n      firstName: firstName.current.value,\r\n      lastName: lastName.current.value,\r\n      grade: grade.current.value,\r\n      instrument: instrument.current.value,\r\n      classes: classes.current.value,\r\n    });\r\n\r\n    postItem('student', body);\r\n    closeView();\r\n  };\r\n\r\n  const onCancelHandler = (e) => {\r\n    e.preventDefault();\r\n    closeView();\r\n  };\r\n\r\n  return (\r\n    <form>\r\n      <div>\r\n        <label htmlFor=\"firstName\">First</label>\r\n        <input\r\n          ref={firstName}\r\n          type=\"text\"\r\n          name=\"firstName\"\r\n          id=\"firstName\"\r\n        ></input>\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"lastName\">Last</label>\r\n        <input ref={lastName} type=\"text\" name=\"lastName\" id=\"lastName\"></input>\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"grade\">Grade</label>\r\n        <input ref={grade} type=\"text\" name=\"grade\" id=\"grade\" required></input>\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"instrument\">Instrument</label>\r\n        <input\r\n          ref={instrument}\r\n          type=\"text\"\r\n          name=\"instrument\"\r\n          id=\"instrument\"\r\n        ></input>\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"classes\">Classes</label>\r\n        <input ref={classes} name=\"classes\" id=\"classes\"></input>\r\n      </div>\r\n      <div className=\"form__buttons\">\r\n        <button className=\"form__buttons--do\" onClick={onAddHandler}>\r\n          Add\r\n        </button>\r\n        <button className=\"form__buttons--cancel\" onClick={onCancelHandler}>\r\n          Cancel\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NewStudentForm;\r\n","import { useRef, useState, useEffect } from 'react';\r\n\r\nimport { patchItem } from '../../../api/api-requests';\r\n\r\nconst UpdateMusicForm = ({ id, closeView }) => {\r\n  const [music, setMusic] = useState(null);\r\n\r\n  const title = useRef(null);\r\n  const composer = useRef(null);\r\n  const arranger = useRef(null);\r\n  const genre = useRef(null);\r\n  const year = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const fetchMusic = async () => {\r\n      const response = await fetch(`/api/music/${id}`);\r\n      const body = await response.json();\r\n      setMusic(body);\r\n    };\r\n    fetchMusic();\r\n  }, [id]);\r\n\r\n  const onUpdateHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!title.current.value) {\r\n      closeView();\r\n      return;\r\n    }\r\n\r\n    const body = JSON.stringify({\r\n      title: title.current.value,\r\n      composer: composer.current.value,\r\n      arranger: arranger.current.value,\r\n      genre: genre.current.value,\r\n      year: year.current.value,\r\n      _id: music._id,\r\n    });\r\n\r\n    patchItem('music', body);\r\n    closeView();\r\n  };\r\n\r\n  const onCancelHandler = (e) => {\r\n    e.preventDefault();\r\n    closeView();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {music && (\r\n        <form>\r\n          <div>\r\n            <label htmlFor=\"title\">Title</label>\r\n            <input\r\n              ref={title}\r\n              type=\"text\"\r\n              name=\"title\"\r\n              id=\"title\"\r\n              defaultValue={music.title}\r\n            ></input>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"composer\">Composer</label>\r\n            <input\r\n              ref={composer}\r\n              type=\"text\"\r\n              name=\"composer\"\r\n              id=\"composer\"\r\n              defaultValue={music.composer}\r\n            ></input>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"arranger\">Arranger</label>\r\n            <input\r\n              ref={arranger}\r\n              type=\"text\"\r\n              name=\"arranger\"\r\n              id=\"arranger\"\r\n              defaultValue={music.arranger}\r\n            ></input>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"genre\">Genre</label>\r\n            <input\r\n              ref={genre}\r\n              type=\"text\"\r\n              name=\"genre\"\r\n              id=\"genre\"\r\n              defaultValue={music.genre}\r\n            ></input>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"contents\">Year</label>\r\n            <input\r\n              ref={year}\r\n              type=\"text\"\r\n              name=\"year\"\r\n              id=\"year\"\r\n              defaultValue={music.year}\r\n            ></input>\r\n          </div>\r\n          <div className=\"form__buttons\">\r\n            <button className=\"form__buttons--do\" onClick={onUpdateHandler}>\r\n              Update\r\n            </button>\r\n            <button className=\"form__buttons--cancel\" onClick={onCancelHandler}>\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </form>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UpdateMusicForm;\r\n","import { useRef } from 'react';\r\n\r\nimport { postItem } from '../../../api/api-requests';\r\n\r\nconst NewMusicForm = ({ closeView }) => {\r\n  const title = useRef(null);\r\n  const composer = useRef(null);\r\n  const arranger = useRef(null);\r\n  const genre = useRef(null);\r\n  const year = useRef(null);\r\n\r\n  const onAddHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!title.current.value) {\r\n      closeView();\r\n      return;\r\n    }\r\n\r\n    const body = JSON.stringify({\r\n      title: title.current.value,\r\n      composer: composer.current.value,\r\n      arranger: arranger.current.value,\r\n      genre: genre.current.value,\r\n      year: year.current.value,\r\n    });\r\n\r\n    postItem('music', body);\r\n    closeView();\r\n  };\r\n\r\n  const onCancelHandler = (e) => {\r\n    e.preventDefault();\r\n    closeView();\r\n  };\r\n\r\n  return (\r\n    <form>\r\n      <div>\r\n        <label htmlFor=\"title\">Title</label>\r\n        <input ref={title} type=\"text\" name=\"title\" id=\"title\"></input>\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"composer\">Composer</label>\r\n        <input ref={composer} type=\"text\" name=\"composer\" id=\"composer\"></input>\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"arranger\">Arranger</label>\r\n        <input\r\n          ref={arranger}\r\n          type=\"text\"\r\n          name=\"arranger\"\r\n          id=\"arranger\"\r\n          required\r\n        ></input>\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"genre\">Genre</label>\r\n        <input ref={genre} type=\"text\" name=\"genre\" id=\"genre\"></input>\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"year\">Year</label>\r\n        <input ref={year} type=\"text\" name=\"year\" id=\"year\"></input>\r\n      </div>\r\n      <div className=\"form__buttons\">\r\n        <button className=\"form__buttons--do\" onClick={onAddHandler}>\r\n          Add\r\n        </button>\r\n        <button className=\"form__buttons--cancel\" onClick={onCancelHandler}>\r\n          Cancel\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NewMusicForm;\r\n","import { useState } from 'react';\r\n\r\nimport UpdateInstrumentForm from './instruments/UpdateInstrumentForm';\r\nimport NewInstrumentForm from './instruments/NewInstrumentForm';\r\nimport UpdateStudentForm from './students/UpdateStudentForm';\r\nimport NewStudentForm from './students/NewStudentForm';\r\nimport UpdateMusicForm from './music/UpdateMusicForm';\r\nimport NewMusicForm from './music/NewMusicForm';\r\n\r\nimport './CrudWrapper.css';\r\n\r\nconst CrudWrapper = ({ id, closeView, crudType, newInstrument }) => {\r\n  const [instrumentCrud, setInstrumentCrud] = useState(\r\n    crudType === 'instrument' ? true : false\r\n  );\r\n  const [studentCrud, setStudentCrud] = useState(\r\n    crudType === 'student' ? true : false\r\n  );\r\n  const [musicCrud, setMusicCrud] = useState(\r\n    crudType === 'music' ? true : false\r\n  );\r\n\r\n  const closeViewHandler = () => {\r\n    setInstrumentCrud(false);\r\n    setStudentCrud(false);\r\n    setMusicCrud(false);\r\n    closeView();\r\n  };\r\n\r\n  return (\r\n    <div className=\"previewitor-container\">\r\n      {instrumentCrud && id && (\r\n        <UpdateInstrumentForm closeView={closeViewHandler} id={id} />\r\n      )}\r\n      {instrumentCrud && !id && (\r\n        <NewInstrumentForm closeView={closeViewHandler} />\r\n      )}\r\n      {studentCrud && id && (\r\n        <UpdateStudentForm closeView={closeViewHandler} id={id} />\r\n      )}\r\n      {studentCrud && !id && <NewStudentForm closeView={closeViewHandler} />}\r\n\r\n      {musicCrud && id && (\r\n        <UpdateMusicForm closeView={closeViewHandler} id={id} />\r\n      )}\r\n      {musicCrud && !id && <NewMusicForm closeView={closeViewHandler} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CrudWrapper;\r\n","import React from 'react';\r\n\r\nconst Button = ({ label, handleClick }) => (\r\n  <button className={label} onClick={handleClick}>\r\n    {label}\r\n  </button>\r\n);\r\n\r\nexport default Button;\r\n","import { useReducer } from 'react';\r\nimport { Grid as GridJS, _ } from 'gridjs-react';\r\n\r\nimport { deleteItem } from '../../api/api-requests';\r\n\r\nimport Button from './Button';\r\n\r\nimport './Grid.css';\r\n\r\nconst Grid = ({ openView, gridType }) => {\r\n  // eslint-disable-next-line\r\n  const [ignored, forceUpdate] = useReducer((x) => x + 1, 0);\r\n\r\n  const handleUpdate = (cell) => {\r\n    openView(gridType, cell);\r\n  };\r\n\r\n  const handleDelete = (cell) => {\r\n    deleteItem(gridType, cell);\r\n    forceUpdate();\r\n  };\r\n\r\n  const columnConfig = () => {\r\n    if (gridType === 'instrument')\r\n      return ['Brand', 'Model', 'Type', 'Serial', 'Case Contents'];\r\n    if (gridType === 'student')\r\n      return ['First', 'Last', 'Grade', 'Instrument', 'Classes'];\r\n    if (gridType === 'music')\r\n      return ['Title', 'Composer', 'Arranger', 'Genre', 'Year'];\r\n  };\r\n\r\n  const urlConfig = () => {\r\n    if (gridType === 'instrument') return 'api/instrument';\r\n    if (gridType === 'student') return 'api/student';\r\n    if (gridType === 'music') return 'api/music';\r\n  };\r\n\r\n  const dbToGrid = (data) => {\r\n    let gridArr = [];\r\n    for (let item in data) {\r\n      let current = data[item];\r\n      if (gridType === 'instrument') {\r\n        gridArr.push([\r\n          current.brand,\r\n          current.model,\r\n          current.type,\r\n          current.serialNumber,\r\n          current.caseContents,\r\n          current._id,\r\n        ]);\r\n      } else if (gridType === 'student') {\r\n        gridArr.push([\r\n          current.firstName,\r\n          current.lastName,\r\n          current.grade,\r\n          current.instrument,\r\n          current.classes,\r\n          current._id,\r\n        ]);\r\n      } else if (gridType === 'music') {\r\n        gridArr.push([\r\n          current.title,\r\n          current.composer,\r\n          current.arranger,\r\n          current.genre,\r\n          current.year,\r\n          current._id,\r\n        ]);\r\n      }\r\n    }\r\n    return gridArr;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <GridJS\r\n        header={<h1>Hello</h1>}\r\n        columns={[\r\n          ...columnConfig(),\r\n          {\r\n            name: 'Action',\r\n            formatter: (cell) =>\r\n              _(\r\n                <>\r\n                  <Button\r\n                    label={'Update'}\r\n                    handleClick={handleUpdate.bind(this, cell)}\r\n                  />{' '}\r\n                  <Button\r\n                    label=\"Delete\"\r\n                    handleClick={handleDelete.bind(this, cell)}\r\n                  />\r\n                </>\r\n              ),\r\n          },\r\n        ]}\r\n        server={{\r\n          url: urlConfig(),\r\n          then: dbToGrid,\r\n        }}\r\n        search={{ enabled: true }}\r\n        className={{\r\n          td: 'td-class',\r\n          th: 'th-class',\r\n          table: 'table-class',\r\n          search: 'search-class',\r\n          pagination: 'pagination-class',\r\n          container: 'container-class',\r\n        }}\r\n        pagination={{\r\n          enabled: true,\r\n          limit: 15,\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Grid;\r\n","import { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FaBackward } from 'react-icons/fa';\r\n\r\nimport CrudWrapper from './partials/CrudWrapper';\r\nimport Grid from './partials/Grid';\r\n\r\nimport './Inventory.css';\r\n\r\nconst Inventory = () => {\r\n  const [crudType, setCrudType] = useState(null);\r\n  const [gridType, setGridType] = useState('music');\r\n  const [instrumentId, setInstrumentId] = useState(null);\r\n  const [newInstrument, setNewInstrument] = useState(false);\r\n\r\n  const openView = (type = null, id = null) => {\r\n    if (id === null) {\r\n      setNewInstrument(true);\r\n      setCrudType(type);\r\n    } else {\r\n      setInstrumentId(id);\r\n      setCrudType(type);\r\n    }\r\n  };\r\n\r\n  const closeViewHandler = () => {\r\n    setInstrumentId(null);\r\n    setNewInstrument(false);\r\n    setCrudType(null);\r\n  };\r\n\r\n  const contextSwitchHandler = (context) => {\r\n    closeViewHandler();\r\n    setGridType(context);\r\n  };\r\n\r\n  return (\r\n    <div className=\"inventory\">\r\n      <div className=\"inventory__back\">\r\n        <Link className=\"inventory__link\" to=\"/\">\r\n          <FaBackward />\r\n        </Link>\r\n      </div>\r\n      {crudType && (\r\n        <CrudWrapper\r\n          id={instrumentId}\r\n          closeView={closeViewHandler}\r\n          crudType={crudType}\r\n          newInstrument={newInstrument}\r\n        />\r\n      )}\r\n      <div className=\"button-container\">\r\n        <button\r\n          className=\"newButton\"\r\n          onClick={() => {\r\n            openView(gridType);\r\n          }}\r\n        >\r\n          New {gridType === 'instrument' && 'Instrument'}\r\n          {gridType === 'student' && 'Student'}\r\n          {gridType === 'music' && 'Music'}\r\n        </button>\r\n        <button\r\n          className=\"contextSwitcher\"\r\n          onClick={() => {\r\n            contextSwitchHandler('music');\r\n          }}\r\n        >\r\n          Music\r\n        </button>\r\n        <button\r\n          className=\"contextSwitcher\"\r\n          onClick={() => {\r\n            contextSwitchHandler('instrument');\r\n          }}\r\n        >\r\n          Instruments\r\n        </button>\r\n        <button\r\n          className=\"contextSwitcher\"\r\n          onClick={() => {\r\n            contextSwitchHandler('student');\r\n          }}\r\n        >\r\n          Students\r\n        </button>\r\n      </div>\r\n      <div className=\"grid-container\">\r\n        <Grid\r\n          openView={openView}\r\n          gridType={gridType}\r\n          closeView={closeViewHandler}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Inventory;\r\n","import { Link } from 'react-router-dom';\r\n\r\nimport './Navbar.css';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"link-ribbon\">\r\n      <Link className=\"link\" to=\"/\">\r\n        Home\r\n      </Link>\r\n      <Link className=\"link\" to=\"/inventory\">\r\n        Demo\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport Home from './components/Home';\nimport Inventory from './components/Inventory';\n\nimport './App.css';\n\nimport Header from './components/partials/Navbar';\n\nconst App = () => {\n  return (\n    <Router>\n      <Route exact path=\"/\">\n        <Header></Header>\n        <Home />\n      </Route>\n      <Route path=\"/inventory\">\n        <Inventory />\n      </Route>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}